```java
class Solution {
    // 解题思路：最大路径（边数）=路径上所有的节点数-1=左子树的最长路径节点数+右子树最长路径节点数+1（根节点）-1
    // =左子树的最长路径节点数+右子树最长路径节点数       
    // =左子树深度+右子树深度（这里将根节点深度定义为1）
    int res = 0;
    public int diameterOfBinaryTree(TreeNode root) {
        depth(root);
        return res;
    }
    public int depth(TreeNode node) {
        if (node == null) {
            return 0;
        }
        int left = depth(node.left); // 左子树深度
        int right = depth(node.right); // 右子树深度
        res = Math.max(res,left + right); // 最大路径
        return Math.max(left, right) + 1; // 当前节点深度，为左子树和右子树的最大深度+1
    }
}
```
